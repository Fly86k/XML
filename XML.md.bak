XML
 21. Создать внешний репозиторий c названием XML.  
 >**github.com->repositories->press "New"->giving name to repository-> click on "Create repository"**
 22. Клонировать репозиторий XML на локальный компьютер.  
 >**GitHub->копируем адрес созданного репозитория XML->в GitBash пишем $ git clone https://github.com/Fly86k/XML.git**
 23. Внутри локального XML создать файл “new.xml”.  
 >**$ touch new.xml**
 24. Добавить файл под гит.  
 >**$ git add new.xml**
 25. Закоммитить файл.  
 >**$ git commit -m "create new file"**
 26. Отправить файл на внешний GitHub репозиторий.  
 >**$ git push**
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.  
 >**$ vim new.xml**  
 >>**<Любимый фильм>Терминатор</Любимый фильм>**  
 >>**<Любимый сериал>МосГаз</Любимый сериал>**  
 >>**<Еда>Утка по Пекински</Еда>**  
 >>**<Время года>Лето</Время года>**  
 >>**<Страна>Уругвай</Страна>**
 28. Отправить изменения на внешний репозиторий.  
 >**$ git add .**  
 >**$ git commit -m "Edit new.xml"**  
 >**$ git push**
 29. Создать файл preferences.xml  
 >**$ touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.  
 >**$ cat preferences.xml
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
 32. Сделать коммит в одну строку.
 33. Отправить сразу 2 файла на внешний репозиторий.
 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML  
 >**$ git pull**